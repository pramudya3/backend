version: '3'

services:
  db:
    image: 'postgres:latest'
    environment:
      POSTGRES_USER: postgres 
      POSTGRES_PASSWORD: postgres 
      POSTGRES_DB: postgres
    ports:
      - 5432:5432
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres', '-d', 'postgres']
      interval: 5s
      timeout: 5s
      retries: 5

  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-postgresql:9.0.2
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 3567:3567
    environment:
      POSTGRESQL_CONNECTION_URI: "postgresql://postgres:postgres@db:5432/postgres"
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5

  account:
    build:
      context: ./account
    environment:
      SERVER_ADDR: ":2000"
      DB_HOST: "db"
      DB_PORT: "5432"
      DB_NAME: "postgres"
      DB_USER: "postgres"
      DB_PASS: "postgres"
      SUPERTOKENS_URI: "http://supertokens:3567"
    ports:
      - "2000:2000"
    depends_on:
      - db
      - supertokens
    networks:
      - app_network
    restart: unless-stopped

  payment:
    build:
      context: ./payment
    environment:
      SERVER_ADDR: ":3000"
      DB_HOST: "db"
      DB_PORT: "5432"
      DB_NAME: "postgres"
      DB_USER: "postgres"
      DB_PASS: "postgres"
      SUPERTOKENS_URI: "http://supertokens:3567"
    ports:
      - "3000:3000"
    depends_on:
      - db
      - supertokens
    networks:
      - app_network
    restart: unless-stopped

networks:
  app_network:
    driver: bridge
